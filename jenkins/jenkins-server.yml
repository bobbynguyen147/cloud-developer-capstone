Description: This template creates a VPC, Internet Gateway, Security Group and an EC2 instance with Jenkins installed in it.

Parameters:
    EnvironmentName:
        Description: This name will be prefixed to all the resources.
        Type: String
    VpcID:
        Description: VPC id
        Type: String
        Default: vpc-0a5a396885755e88d
    PublicSubnetID:
        Description: public subnet id
        Type: String
        Default: subnet-0bb1181d59b53c599
    ServerAMIId:
        Description: AMI ID for EC2 instances.
        Type: String
    InstanceType:
        Description: EC2 instance type
        Type: String

Resources:
    ## Security Group ##

    # Security Group for Jenkins Server
    JenkinsServerSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Allow http to our hosts and SSH from local only
            VpcId: !Ref VpcID
            SecurityGroupIngress: #Allowing inbound traffic on port 80 for accessing application and on port 22 for SSH in case of troubleshooting any issues.
                - IpProtocol: tcp
                  FromPort: 8080
                  ToPort: 8080
                  CidrIp: 0.0.0.0/0
                - IpProtocol: tcp
                  FromPort: 22
                  ToPort: 22
                  CidrIp: 0.0.0.0/0
            SecurityGroupEgress: # Allowing outbound traffic on all ports so that updates or patches can be downloaded.
                - IpProtocol: tcp
                  FromPort: 0
                  ToPort: 65535
                  CidrIp: 0.0.0.0/0

    ## Launch Configuration ##

    # Launch configuration that will be used when server will spin up.
    JenkinsServerLaunchConfig:
        Type: AWS::AutoScaling::LaunchConfiguration
        Properties:
            UserData:
                Fn::Base64: !Sub |
                    #!/bin/bash
                    # Install Jenkins
                    apt-get update -y
                    apt install -y default-jdk
                    wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | apt-key add -
                    sh -c 'echo deb https://pkg.jenkins.io/debian binary/ > /etc/apt/sources.list.d/jenkins.list'
                    apt-get update -y
                    apt-get install -y jenkins
                    systemctl start jenkins
                    # Install NodeJS 14
                    curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -
                    apt-get install -y nodejs
                    # Install Serverless
                    npm install -g serverless@2.21.1
                    # Install Docker
                    apt-get update -y
                    apt-get install -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common
                    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
                    apt-key fingerprint 0EBFCD88
                    add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
                    apt-get update -y
                    apt-get install -y docker-ce docker-ce-cli containerd.io
                    # Install AWS CLI version 2
                    apt-get install unzip -y
                    curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "/tmp/awscliv2.zip"
                    unzip /tmp/awscliv2.zip
                    ./aws/install -i /usr/local/aws-cli -b /usr/bin
                    # Add jenkins user tp docker group
                    usermod -aG docker jenkins
                    # Restart Jenkins
                    systemctl restart jenkins
            ImageId: !Ref ServerAMIId
            SecurityGroups:
                - Ref: JenkinsServerSecurityGroup
            InstanceType: !Ref InstanceType
            KeyName: udacity-capstone
            BlockDeviceMappings:
                - DeviceName: /dev/sda1
                  Ebs:
                      VolumeSize: '10'
                      VolumeType: gp3
    ## Auto Scaling Group ##

    # Auto scaling group for Udagram App
    JenkinsGroup:
        Type: AWS::AutoScaling::AutoScalingGroup
        Properties:
            VPCZoneIdentifier:
                - !Ref PublicSubnetID
            LaunchConfigurationName:
                Ref: JenkinsServerLaunchConfig
            MinSize: "1"
            MaxSize: "1"
